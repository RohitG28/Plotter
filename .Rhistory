install.packages("Plotter")
library("Plotter")
Plotter
Plotter::scatterPlot
library(roxygen2)
document()
devtools::document()
quit
devtools::document()
Plotter::scatterPlot("F:\\Atlas\\Atlas-of-Learning\\tmp\\test.json")
library(opencpu)
ocpu_start_app("Plotter")
getwd()
setwd("F://Atlas//Atlas-of-Learning")
getwd()
#'plot a scatter3d
#'@export
library("car")
library("rgl")
library("jsonlite")
scatterPlot <- function(jsonFilePath)
{
data.json <- jsonlite::read_json(path=jsonFilePath,simplifyVector = TRUE)
rgl::plot3d(x=data.json$nodes$x,y=data.json$nodes$y,z=data.json$nodes$z,xlab="x",ylab="y",zlab="z",size=10,col="blue",box=FALSE)
rgl::planes3d(a=0,b=0,c=1,d=(-1)*data.json$nodes$z,alpha=0.5)
count=1
while(count<=nrow(data.json$links)){
rgl::lines3d(x=c(data.json$links$source$x[c(count)],data.json$links$target$x[c(count)]),
y=c(data.json$links$source$y[c(count)],data.json$links$target$y[c(count)]),
z=c(data.json$links$source$z[c(count)],data.json$links$target$z[c(count)]),
add=TRUE)
count=count+1
}
}
scatterPlot("./tmp/test.json")
#'plot a scatter3d
#'@export
library("car")
library("rgl")
library("jsonlite")
scatterPlot <- function(jsonFilePath)
{
data.json <- jsonlite::read_json(path=jsonFilePath,simplifyVector = TRUE)
rgl::plot3d(x=data.json$nodes$x,y=data.json$nodes$y,z=data.json$nodes$z,xlab="x",ylab="y",zlab="z",size=10,col="blue",box=FALSE)
rgl::planes3d(a=0,b=0,c=1,d=(-1)*data.json$nodes$z,alpha=0.5)
count=1
while(count<=nrow(data.json$links)){
rgl::lines3d(x=c(data.json$links$source$x[c(count)],data.json$links$target$x[c(count)]),
y=c(data.json$links$source$y[c(count)],data.json$links$target$y[c(count)]),
z=c(data.json$links$source$z[c(count)],data.json$links$target$z[c(count)]),
add=TRUE)
count=count+1
}
}
scatterPlot("./tmp/test.json")
ocpu_start_app("Plotter")
devtools::document()
devtools::document("Plotter")
devtools::document("R\\Plotter")
devtools::document("R\\Plotter")
library(roxygen2)
library(devtools)
devtools::document("R\\Plotter")
devtools::document("R\\Plotter")
ocpu_start_app("Plotter")
ocpu_start_app("Plotter")
getwd()
scatterPlot <- function(jsonFilePath)
{
library("car")
library("rgl")
library("jsonlite")
data.json <- jsonlite::read_json(path=jsonFilePath,simplifyVector = TRUE)
rgl::plot3d(x=data.json$nodes$x,y=data.json$nodes$y,z=data.json$nodes$z,xlab="x",ylab="y",zlab="z",size=10,col="blue",box=FALSE)
rgl::planes3d(a=0,b=0,c=1,d=(-1)*data.json$nodes$z,alpha=0.5)
count=1
while(count<=nrow(data.json$links)){
rgl::lines3d(x=c(data.json$links$source$x[c(count)],data.json$links$target$x[c(count)]),
y=c(data.json$links$source$y[c(count)],data.json$links$target$y[c(count)]),
z=c(data.json$links$source$z[c(count)],data.json$links$target$z[c(count)]),
add=TRUE)
count=count+1
}
}
scatterPlot("./tmp/test.json")
devtools::document("Plotter")
devtools::document(".\\R\\Plotter")
ocpu_start_app("Plotter")
install.packages("Plotter")
install.packages("Plotter")
View(scatterPlot)
getwd()
scatterPlot("./tmp/test.json")
ocpu_start_app("Plotter")
ocpu_start_app(".\\R\\Plotter")
library(roxygen2)
library(opencpu)
ocpu_start_app(".\\R\\Plotter")
ocpu_start_app("Plotter")
library(opencpu)
library(roxygen2)
library(devtools)
ocpu_start_app("Plotter")
remove_apps("Plotter")
installed_apps("Plotter")
installed_apps()
install_apps("Plotter")
install_apps(".\\R\\Plotter")
install_apps("rajatjain1997/Atlas-of-Learning/R/Plotter")
install_apps("Plotter")
install.packages("Plotter")
installed.packages()
install_apps("Plotter")
install.packages("Plotter")
library("Plotter")
install_apps("Plotter")
install_apps("./R/Plotter")
install_apps("RohitG28/Plotter")
install_apps("RohitG28/Plotter/Plotter")
install_apps("RohitG28/Plotter")
ocpu_start_app("Plotter")
library("Plotter")
devtools::document("Plotter")
getwd()
setwd("./..")
getwd()
setwd("./..")
getwd()
devtools::document("./R/Plotter")
Plotter::scatterPlot("./tmp/test.json")
ocpu_start_app("Plotter")
devtools::document("Plotter")
devtools::document("./R/Plotter")
remove.packages("Plotter")
remove_apps("Plotter")
install_apps("RohitG28/Plotter")
ocpu_start_app("Plotter")
install.packages("Plotter")
install.packages("Plotter")
library(roxygen2)
library(devtools)
library(Plotter)
install.packages("Plotter")
library(Plotter)
installed.packages()
install.packages(Plotter)
install.packages("Plotter")
library(opencpu)
install.packages("Plotter")
install.packages("./R/Plotter")
installed.packages()
install.packages("./R/Plotter")
installed.packages()
getwd()
install.packages("../Plotter")
installed.packages()
install.packages("Plotter")
install.packages("Plotter")
library(opencpu)
library(devtools)
library(roxygen2)
install.packages("Plotter")
installed.packages()
install.packages("Plotter")
setRepositories()
install_github("RohitG28/Plotter")
installed.packages()
ocpu_start_app("Plotter")
data.json1=jsonlite::read_json(path="./tmp/test.json,simplifyVector = TRUE)
)
exit
q
quit()
quit()
